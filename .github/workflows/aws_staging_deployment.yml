name: Staging Deployment

on: workflow_dispatch


jobs:
  buildDeploy:
    # The type of runner that the job will run on 
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6]
        node-version: [10.16]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    #Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    #Installing Dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        cd frontend
        npm ci

    - name: Checking Migration
      run: |
        cd backend
        ./manage.py makemigrations --check

    - name: Prepare Package Staging
      run: |
        cd frontend
        sh ./stagingPreparePackage.sh
          
    - name: Send frontend build to ec2
      uses: appleboy/scp-action@master
      with:
        host: stag.korangle.com
        username: ubuntu
        key: ${{ secrets.STAGING_PRIVATE_KEY }}
        port: 22
        source: "frontend/korangle.zip"
        target: "/home/ubuntu"

    
    - name: Deploy to Ec2
      uses: appleboy/ssh-action@master
      with:
        host: stag.korangle.com
        username: ubuntu
        key: ${{ secrets.STAGING_PRIVATE_KEY }}
        port: 22
        envs: GITHUB_REF
        script: |
          source virtual_environment/bin/activate
          export KORANGLE_STAGING=TRUE
          export STAGING_BRANCH=$GITHUB_REF
          sh /home/ubuntu/code/korangle/backend/stop_server.sh
          sh ./setupkorangle.sh
          sh ./setupBackend.sh
          cd /home/ubuntu/code/korangle/backend
          sh /home/ubuntu/code/korangle/backend/start_server.sh
          
