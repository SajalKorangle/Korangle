# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2019-06-01 10:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from fees_third_app.db_script.access_fees_app import access_fees_app
from fees_third_app.db_script.populate_fees_app import populate_fees_app


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('employee_app', '0009_auto_20190413_2136'),
        ('student_app', '0022_auto_20190410_2113'),
        ('school_app', '0036_school_dateofexpiration'),
        ('class_app', '0006_merge_20181125_1213'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusStopFilterFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentBusStop', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='school_app.BusStop', verbose_name='parentBusStop')),
            ],
            options={
                'db_table': 'bus_stop_filter_fee',
            },
        ),
        migrations.CreateModel(
            name='ClassFilterFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentClass', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='class_app.Class', verbose_name='parentClass')),
                ('parentDivision', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='class_app.Division', verbose_name='parentDivision')),
            ],
            options={
                'db_table': 'class_filter_fee',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discountNumber', models.IntegerField(default=0, verbose_name='discountNumber')),
                ('generationDateTime', models.DateTimeField(auto_now_add=True, verbose_name='generationDateTime')),
                ('remark', models.TextField(null=True, verbose_name='remark')),
                ('cancelled', models.BooleanField(default=False, verbose_name='cancelled')),
                ('parentEmployee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='employee_app.Employee', verbose_name='parentEmployee')),
                ('parentSchool', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.School', verbose_name='parentSchool')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
                ('parentStudent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_app.Student', verbose_name='parentStudent')),
            ],
            options={
                'db_table': 'discount_new',
            },
        ),
        migrations.CreateModel(
            name='FeeFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.TextField(verbose_name='heading')),
                ('requirement', models.TextField(verbose_name='requirement')),
                ('reason', models.TextField(verbose_name='reason')),
                ('example', models.TextField(verbose_name='example')),
                ('parentUser', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='parentUser')),
            ],
            options={
                'db_table': 'fee_feature',
            },
        ),
        migrations.CreateModel(
            name='FeeReceipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiptNumber', models.IntegerField(default=0, verbose_name='receiptNumber')),
                ('generationDateTime', models.DateTimeField(auto_now_add=True, verbose_name='generationDateTime')),
                ('remark', models.TextField(null=True, verbose_name='remark')),
                ('cancelled', models.BooleanField(default=False, verbose_name='cancelled')),
                ('checkNumber', models.IntegerField(null=True, verbose_name='checkNumber')),
                ('modeOfPayment', models.CharField(choices=[('Cash', 'Cash'), ('Check', 'Check')], max_length=20, null=True)),
                ('parentEmployee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_app.Employee', verbose_name='parentEmployee')),
                ('parentSchool', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.School', verbose_name='parentSchool')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
                ('parentStudent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_app.Student', verbose_name='parentStudent')),
            ],
            options={
                'db_table': 'fee_receipt_new',
            },
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('orderNumber', models.IntegerField(default=0, verbose_name='orderNumber')),
                ('parentSchool', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.School', verbose_name='parentSchool')),
            ],
            options={
                'db_table': 'fee_type_new',
            },
        ),
        migrations.CreateModel(
            name='LockFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked', models.BooleanField(default=False, verbose_name='locked')),
                ('parentSchool', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='school_app.School', verbose_name='parentSchool')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
            ],
            options={
                'db_table': 'lock_fee',
            },
        ),
        migrations.CreateModel(
            name='SchoolFeeRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('ruleNumber', models.IntegerField(default=0, verbose_name='ruleNumber')),
                ('isClassFilter', models.BooleanField(default=False, verbose_name='isClassFilter')),
                ('isBusStopFilter', models.BooleanField(default=False, verbose_name='isBusStopFilter')),
                ('onlyNewAdmission', models.BooleanField(default=False, verbose_name='onlyNewAdmission')),
                ('includeRTE', models.BooleanField(default=True, verbose_name='includeRTE')),
                ('isAnnually', models.BooleanField(default=False, verbose_name='isAnnually')),
                ('aprilAmount', models.IntegerField(null=True, verbose_name='aprilAmount')),
                ('aprilLastDate', models.DateField(null=True, verbose_name='aprilLastDate')),
                ('aprilLateFee', models.IntegerField(null=True, verbose_name='aprilLateFee')),
                ('mayAmount', models.IntegerField(null=True, verbose_name='mayAmount')),
                ('mayLastDate', models.DateField(null=True, verbose_name='mayLastDate')),
                ('mayLateFee', models.IntegerField(null=True, verbose_name='mayLateFee')),
                ('juneAmount', models.IntegerField(null=True, verbose_name='juneAmount')),
                ('juneLastDate', models.DateField(null=True, verbose_name='juneLastDate')),
                ('juneLateFee', models.IntegerField(null=True, verbose_name='juneLateFee')),
                ('julyAmount', models.IntegerField(null=True, verbose_name='julyAmount')),
                ('julyLastDate', models.DateField(null=True, verbose_name='julyLastDate')),
                ('julyLateFee', models.IntegerField(null=True, verbose_name='julyLateFee')),
                ('augustAmount', models.IntegerField(null=True, verbose_name='augustAmount')),
                ('augustLastDate', models.DateField(null=True, verbose_name='augustLastDate')),
                ('augustLateFee', models.IntegerField(null=True, verbose_name='augustLateFee')),
                ('septemberAmount', models.IntegerField(null=True, verbose_name='septemberAmount')),
                ('septemberLastDate', models.DateField(null=True, verbose_name='septemberLastDate')),
                ('septemberLateFee', models.IntegerField(null=True, verbose_name='septemberLateFee')),
                ('octoberAmount', models.IntegerField(null=True, verbose_name='octoberAmount')),
                ('octoberLastDate', models.DateField(null=True, verbose_name='octoberLastDate')),
                ('octoberLateFee', models.IntegerField(null=True, verbose_name='octoberLateFee')),
                ('novemberAmount', models.IntegerField(null=True, verbose_name='novemberAmount')),
                ('novemberLastDate', models.DateField(null=True, verbose_name='novemberLastDate')),
                ('novemberLateFee', models.IntegerField(null=True, verbose_name='novemberLateFee')),
                ('decemberAmount', models.IntegerField(null=True, verbose_name='decemberAmount')),
                ('decemberLastDate', models.DateField(null=True, verbose_name='decemberLastDate')),
                ('decemberLateFee', models.IntegerField(null=True, verbose_name='decemberLateFee')),
                ('januaryAmount', models.IntegerField(null=True, verbose_name='januaryAmount')),
                ('januaryLastDate', models.DateField(null=True, verbose_name='januaryLastDate')),
                ('januaryLateFee', models.IntegerField(null=True, verbose_name='januaryLateFee')),
                ('februaryAmount', models.IntegerField(null=True, verbose_name='februaryAmount')),
                ('februaryLastDate', models.DateField(null=True, verbose_name='februaryLastDate')),
                ('februaryLateFee', models.IntegerField(null=True, verbose_name='februaryLateFee')),
                ('marchAmount', models.IntegerField(null=True, verbose_name='marchAmount')),
                ('marchLastDate', models.DateField(null=True, verbose_name='marchLastDate')),
                ('marchLateFee', models.IntegerField(null=True, verbose_name='marchLateFee')),
                ('parentFeeType', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='fees_third_app.FeeType', verbose_name='parentFeeType')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
            ],
            options={
                'db_table': 'school_fee_rule',
            },
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAnnually', models.BooleanField(default=False, verbose_name='isAnnually')),
                ('cleared', models.BooleanField(default=False, verbose_name='cleared')),
                ('aprilAmount', models.IntegerField(null=True, verbose_name='aprilAmount')),
                ('aprilLastDate', models.DateField(null=True, verbose_name='aprilLastDate')),
                ('aprilLateFee', models.IntegerField(null=True, verbose_name='aprilLateFee')),
                ('aprilClearanceDate', models.DateField(null=True, verbose_name='aprilClearanceDate')),
                ('mayAmount', models.IntegerField(null=True, verbose_name='mayAmount')),
                ('mayLastDate', models.DateField(null=True, verbose_name='mayLastDate')),
                ('mayLateFee', models.IntegerField(null=True, verbose_name='mayLateFee')),
                ('mayClearanceDate', models.DateField(null=True, verbose_name='mayClearanceDate')),
                ('juneAmount', models.IntegerField(null=True, verbose_name='juneAmount')),
                ('juneLastDate', models.DateField(null=True, verbose_name='juneLastDate')),
                ('juneLateFee', models.IntegerField(null=True, verbose_name='juneLateFee')),
                ('juneClearanceDate', models.DateField(null=True, verbose_name='juneClearanceDate')),
                ('julyAmount', models.IntegerField(null=True, verbose_name='julyAmount')),
                ('julyLastDate', models.DateField(null=True, verbose_name='julyLastDate')),
                ('julyLateFee', models.IntegerField(null=True, verbose_name='julyLateFee')),
                ('julyClearanceDate', models.DateField(null=True, verbose_name='julyClearanceDate')),
                ('augustAmount', models.IntegerField(null=True, verbose_name='augustAmount')),
                ('augustLastDate', models.DateField(null=True, verbose_name='augustLastDate')),
                ('augustLateFee', models.IntegerField(null=True, verbose_name='augustLateFee')),
                ('augustClearanceDate', models.DateField(null=True, verbose_name='augustClearanceDate')),
                ('septemberAmount', models.IntegerField(null=True, verbose_name='septemberAmount')),
                ('septemberLastDate', models.DateField(null=True, verbose_name='septemberLastDate')),
                ('septemberLateFee', models.IntegerField(null=True, verbose_name='septemberLateFee')),
                ('septemberClearanceDate', models.DateField(null=True, verbose_name='septemberClearanceDate')),
                ('octoberAmount', models.IntegerField(null=True, verbose_name='octoberAmount')),
                ('octoberLastDate', models.DateField(null=True, verbose_name='octoberLastDate')),
                ('octoberLateFee', models.IntegerField(null=True, verbose_name='octoberLateFee')),
                ('octoberClearanceDate', models.DateField(null=True, verbose_name='octoberClearanceDate')),
                ('novemberAmount', models.IntegerField(null=True, verbose_name='novemberAmount')),
                ('novemberLastDate', models.DateField(null=True, verbose_name='novemberLastDate')),
                ('novemberLateFee', models.IntegerField(null=True, verbose_name='novemberLateFee')),
                ('novemberClearanceDate', models.DateField(null=True, verbose_name='novemberClearanceDate')),
                ('decemberAmount', models.IntegerField(null=True, verbose_name='decemberAmount')),
                ('decemberLastDate', models.DateField(null=True, verbose_name='decemberLastDate')),
                ('decemberLateFee', models.IntegerField(null=True, verbose_name='decemberLateFee')),
                ('decemberClearanceDate', models.DateField(null=True, verbose_name='decemberClearanceDate')),
                ('januaryAmount', models.IntegerField(null=True, verbose_name='januaryAmount')),
                ('januaryLastDate', models.DateField(null=True, verbose_name='januaryLastDate')),
                ('januaryLateFee', models.IntegerField(null=True, verbose_name='januaryLateFee')),
                ('januaryClearanceDate', models.DateField(null=True, verbose_name='januaryClearanceDate')),
                ('februaryAmount', models.IntegerField(null=True, verbose_name='februaryAmount')),
                ('februaryLastDate', models.DateField(null=True, verbose_name='februaryLastDate')),
                ('februaryLateFee', models.IntegerField(null=True, verbose_name='februaryLateFee')),
                ('februaryClearanceDate', models.DateField(null=True, verbose_name='februaryClearanceDate')),
                ('marchAmount', models.IntegerField(null=True, verbose_name='marchAmount')),
                ('marchLastDate', models.DateField(null=True, verbose_name='marchLastDate')),
                ('marchLateFee', models.IntegerField(null=True, verbose_name='marchLateFee')),
                ('marchClearanceDate', models.DateField(null=True, verbose_name='marchClearanceDate')),
                ('parentFeeType', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='fees_third_app.FeeType', verbose_name='parentFeeType')),
                ('parentSchoolFeeRule', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='fees_third_app.SchoolFeeRule', verbose_name='parentSchoolFeeRule')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
                ('parentStudent', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='student_app.Student', verbose_name='parentStudent')),
            ],
            options={
                'db_table': 'student_fee',
            },
        ),
        migrations.CreateModel(
            name='SubDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAnnually', models.BooleanField(default=False, verbose_name='isAnnually')),
                ('aprilAmount', models.IntegerField(null=True, verbose_name='aprilAmount')),
                ('aprilLateFee', models.IntegerField(null=True, verbose_name='aprilLateFee')),
                ('mayAmount', models.IntegerField(null=True, verbose_name='mayAmount')),
                ('mayLateFee', models.IntegerField(null=True, verbose_name='mayLateFee')),
                ('juneAmount', models.IntegerField(null=True, verbose_name='juneAmount')),
                ('juneLateFee', models.IntegerField(null=True, verbose_name='juneLateFee')),
                ('julyAmount', models.IntegerField(null=True, verbose_name='julyAmount')),
                ('julyLateFee', models.IntegerField(null=True, verbose_name='julyLateFee')),
                ('augustAmount', models.IntegerField(null=True, verbose_name='augustAmount')),
                ('augustLateFee', models.IntegerField(null=True, verbose_name='augustLateFee')),
                ('septemberAmount', models.IntegerField(null=True, verbose_name='septemberAmount')),
                ('septemberLateFee', models.IntegerField(null=True, verbose_name='septemberLateFee')),
                ('octoberAmount', models.IntegerField(null=True, verbose_name='octoberAmount')),
                ('octoberLateFee', models.IntegerField(null=True, verbose_name='octoberLateFee')),
                ('novemberAmount', models.IntegerField(null=True, verbose_name='novemberAmount')),
                ('novemberLateFee', models.IntegerField(null=True, verbose_name='novemberLateFee')),
                ('decemberAmount', models.IntegerField(null=True, verbose_name='decemberAmount')),
                ('decemberLateFee', models.IntegerField(null=True, verbose_name='decemberLateFee')),
                ('januaryAmount', models.IntegerField(null=True, verbose_name='januaryAmount')),
                ('januaryLateFee', models.IntegerField(null=True, verbose_name='januaryLateFee')),
                ('februaryAmount', models.IntegerField(null=True, verbose_name='februaryAmount')),
                ('februaryLateFee', models.IntegerField(null=True, verbose_name='februaryLateFee')),
                ('marchAmount', models.IntegerField(null=True, verbose_name='marchAmount')),
                ('marchLateFee', models.IntegerField(null=True, verbose_name='marchLateFee')),
                ('parentDiscount', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='fees_third_app.Discount', verbose_name='parentDiscount')),
                ('parentFeeType', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='fees_third_app.FeeType', verbose_name='parentFeeType')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
                ('parentStudentFee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fees_third_app.StudentFee', verbose_name='parentStudentFee')),
            ],
            options={
                'db_table': 'sub_discount_new',
            },
        ),
        migrations.CreateModel(
            name='SubFeeReceipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAnnually', models.BooleanField(default=False, verbose_name='isAnnually')),
                ('aprilAmount', models.IntegerField(null=True, verbose_name='aprilAmount')),
                ('aprilLateFee', models.IntegerField(null=True, verbose_name='aprilLateFee')),
                ('mayAmount', models.IntegerField(null=True, verbose_name='mayAmount')),
                ('mayLateFee', models.IntegerField(null=True, verbose_name='mayLateFee')),
                ('juneAmount', models.IntegerField(null=True, verbose_name='juneAmount')),
                ('juneLateFee', models.IntegerField(null=True, verbose_name='juneLateFee')),
                ('julyAmount', models.IntegerField(null=True, verbose_name='julyAmount')),
                ('julyLateFee', models.IntegerField(null=True, verbose_name='julyLateFee')),
                ('augustAmount', models.IntegerField(null=True, verbose_name='augustAmount')),
                ('augustLateFee', models.IntegerField(null=True, verbose_name='augustLateFee')),
                ('septemberAmount', models.IntegerField(null=True, verbose_name='septemberAmount')),
                ('septemberLateFee', models.IntegerField(null=True, verbose_name='septemberLateFee')),
                ('octoberAmount', models.IntegerField(null=True, verbose_name='octoberAmount')),
                ('octoberLateFee', models.IntegerField(null=True, verbose_name='octoberLateFee')),
                ('novemberAmount', models.IntegerField(null=True, verbose_name='novemberAmount')),
                ('novemberLateFee', models.IntegerField(null=True, verbose_name='novemberLateFee')),
                ('decemberAmount', models.IntegerField(null=True, verbose_name='decemberAmount')),
                ('decemberLateFee', models.IntegerField(null=True, verbose_name='decemberLateFee')),
                ('januaryAmount', models.IntegerField(null=True, verbose_name='januaryAmount')),
                ('januaryLateFee', models.IntegerField(null=True, verbose_name='januaryLateFee')),
                ('februaryAmount', models.IntegerField(null=True, verbose_name='februaryAmount')),
                ('februaryLateFee', models.IntegerField(null=True, verbose_name='februaryLateFee')),
                ('marchAmount', models.IntegerField(null=True, verbose_name='marchAmount')),
                ('marchLateFee', models.IntegerField(null=True, verbose_name='marchLateFee')),
                ('parentFeeReceipt', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='fees_third_app.FeeReceipt', verbose_name='parentFeeReceipt')),
                ('parentFeeType', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='fees_third_app.FeeType', verbose_name='parentFeeType')),
                ('parentSession', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='school_app.Session', verbose_name='parentSession')),
                ('parentStudentFee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fees_third_app.StudentFee', verbose_name='parentStudentFee')),
            ],
            options={
                'db_table': 'sub_fee_receipt__new',
            },
        ),
        migrations.AddField(
            model_name='classfilterfee',
            name='parentSchoolFeeRule',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='fees_third_app.SchoolFeeRule', verbose_name='parentSchoolFeeRule'),
        ),
        migrations.AddField(
            model_name='busstopfilterfee',
            name='parentSchoolFeeRule',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='fees_third_app.SchoolFeeRule', verbose_name='parentSchoolFeeRule'),
        ),
        migrations.AlterUniqueTogether(
            name='studentfee',
            unique_together=set([('parentSchoolFeeRule', 'parentStudent')]),
        ),
        migrations.AlterUniqueTogether(
            name='schoolfeerule',
            unique_together=set([('name', 'parentFeeType', 'parentSession'), ('ruleNumber', 'parentFeeType', 'parentSession')]),
        ),
        migrations.AlterUniqueTogether(
            name='feetype',
            unique_together=set([('name', 'parentSchool')]),
        ),
        migrations.AlterUniqueTogether(
            name='feereceipt',
            unique_together=set([('receiptNumber', 'parentSchool')]),
        ),
        migrations.AlterUniqueTogether(
            name='discount',
            unique_together=set([('discountNumber', 'parentSchool')]),
        ),
        migrations.RunPython(access_fees_app),
        migrations.RunPython(populate_fees_app),
    ]
